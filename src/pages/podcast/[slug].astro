---
import { getCollection, render, getEntry } from "astro:content";
import Layout from "../../layouts/post.astro";

export async function getStaticPaths() {
  const postEntries = await getCollection("podcast");
  return postEntries.map((entry) => ({
    params: { slug: entry.id },
    props: { entry },
  }));
}

const entry = await getEntry("podcast", Astro.params.slug);
const { Content } = await render(entry!);

const getYouTubeEmbedUrl = (link: string) => {
  const url = new URL(link);
  const videoId = [...url.pathname.split("/")].pop();
  const si = url.searchParams.get("si");
  const t = url.searchParams.get("t");

  const resultUrl = new URL(`https://www.youtube.com/embed/${videoId}`);

  if (si) {
    resultUrl.searchParams.set("si", si);
  }

  var result = resultUrl.href;

  if (t) {
    result += `&amp;start=${t}`;
  }

  return result;
};
---

<Layout frontmatter={entry!.data}>
  <Fragment slot="before-content">
    <div class="w-full max-w-2xl mx-auto dark:prose-invert">
      <a
        href="/podcasts"
        class="inline-flex items-center gap-2 text-sm text-neutral-600 hover:text-neutral-900 dark:text-neutral-400 dark:hover:text-neutral-100"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="16"
          height="16"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
        >
          <path d="m15 18-6-6 6-6"></path>
        </svg>
        Back to podcasts
      </a>
    </div>
  </Fragment>

  <Content />

  {
    entry!.data.type === "youtube" && (
      <iframe
        src={getYouTubeEmbedUrl(entry!.data.link)}
        width="560"
        height="315"
        class="w-full"
        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
        allowfullscreen
      />
    )
  }
</Layout>
